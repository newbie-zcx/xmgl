package ${package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.scsoft.scpt.annotation.SysLog;
import org.springframework.web.bind.annotation.RequestMapping;
import com.scsoft.scpt.common.JsonResult;
import com.scsoft.scpt.common.PageResult;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.scsoft.scpt.common.handler.SystemCommonHandler;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import org.apache.commons.lang3.StringUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Controller;
import ${superControllerClassPackage};


/**
 * <p>
 * ${table.comment} 前端控制器
 * </p>
 * @author ${author}
 * @CreateDate ${date}
 * @copyright: 雪城软件有限公司
 * All rights Reserved，Designed By Scsoft
 * @Version: 1.0
 */

@Controller
@RequestMapping("/${package.ModuleName}/${table.entityPath}")
public class ${table.controllerName} extends ${superControllerClass} {
   private Logger logger = LoggerFactory.getLogger(getClass());

    private String PREFIX = "module/${package.ModuleName}/${table.entityPath}/";

    @Autowired
    private ${table.serviceName} ${table.entityPath}Service;

    /**
     * 跳转到${table.comment}首页
     */
    @RequiresPermissions("${table.entityPath}:view")
    @RequestMapping("")
    public String index(Model model,HttpServletRequest request) {
        return PREFIX + "${table.entityPath}";
    }

    /**
     * 跳转到添加${table.comment}
     */
    @RequestMapping("/${table.entityPath}add")
    @RequiresPermissions("${table.entityPath}:add")
    public String toAdd(Model model,HttpServletRequest request) {
        return PREFIX + "${table.entityPath}_add.html";
    }

    /**
     * 跳转到修改${table.comment}
     */
    @RequestMapping("/${table.entityPath}update")
     @RequiresPermissions("${table.entityPath}:update")
    public String toUpdate(Model model,HttpServletRequest request) {
        return PREFIX + "${table.entityPath}_edit.html";
    }


   /**
     * ${table.comment}详情
     */
    @RequestMapping(value = "/detail/{${table.entityPath}Id}")
    @ResponseBody
    public Object toDetail(@PathVariable("${table.entityPath}Id") Integer ${table.entityPath}Id, Model model,HttpServletRequest request) {
        return ${table.entityPath}Service.getById(${table.entityPath}Id);
    }

    /**
     * 获取${table.comment}列表
     */
    @RequestMapping(value = "/list")
    @RequiresPermissions("${table.entityPath}:view")
    @ResponseBody
    public PageResult<${table.entityName}> list(Integer page, Integer limit, ${table.entityName} ${table.entityPath},String condition, Model model,HttpServletRequest request) {
        return ${table.entityPath}Service.listPage(page,limit,${table.entityPath});
    }


/**
     * 新增${table.comment}
     */
    @RequestMapping(value = "/add")
    @ResponseBody
    @RequiresPermissions("${table.entityPath}:add")
    @SysLog(operationType="add操作:",operationName="添加${table.comment}")
    public JsonResult add(${entity} ${table.entityPath}) {
        if (${table.entityPath}Service.save(${table.entityPath})) {
                return JsonResult.ok("添加成功");
        } else {
            return JsonResult.error("添加失败");
        }

    }

    /**
     * 删除${table.comment}
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    @RequiresPermissions("${table.entityPath}:delete")
    @SysLog(operationType="delete操作:",operationName="删除${table.comment}")
    public JsonResult delete(@RequestParam Integer ${table.entityPath}Id) {
         if (${table.entityPath}Service.removeById(${table.entityPath}Id)) {
                  return JsonResult.ok("删除成功");
          } else {
              return JsonResult.error("删除失败");
          }
    }

    /**
     * 逻辑删除${table.comment}
     */
    @RequestMapping(value = "/logicDelete")
    @ResponseBody
    @RequiresPermissions("${table.entityPath}:delete")
    @SysLog(operationType="delete操作:",operationName="逻辑删除${table.comment}")
    public JsonResult logicDelete(@RequestParam Integer ${table.entityPath}Id) {
    ${entity} ${table.entityPath}=${table.entityPath}Service.getById(${table.entityPath}Id);
       if (${table.entityPath}Service.logicDelete(${table.entityPath})) {
           return JsonResult.ok("删除成功");
       } else {
           return JsonResult.error("删除失败");
       }
    }


    /**
     * 修改${table.comment}
     */
    @RequestMapping(value = "/update")
    @ResponseBody
    @RequiresPermissions("${table.entityPath}:update")
    @SysLog(operationType="update操作:",operationName="修改${table.comment}")
    public JsonResult update(${entity} ${table.entityPath}) {
       if (${table.entityPath}Service.updateById(${table.entityPath})) {
           return JsonResult.ok("修改成功");
       } else {
           return JsonResult.error("修改失败");
       }
    }


    @RequestMapping("/batchDelete")
    @ResponseBody
    @RequiresPermissions("${table.entityPath}:delete")
    @SysLog(operationType="delete操作:",operationName="批量删除${table.comment}")
    public JsonResult batchDelete(String departIds) {
        System.out.println(departIds);
        List<String> lis = Arrays.asList(departIds.split(","));
        if (${table.entityPath}Service.removeByIds(lis)) {
            return JsonResult.ok("删除成功");
        }
        return JsonResult.error("删除失败");
    }

}
}
